<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImageStore" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAlEAAAFECAYAAAAHj2trAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAFGpJREFUeF7t3UuPXGdCxvF8guELwCeADwAsYQMLWBJ2DOIiISRYMCAhgQRiZsMC
        cVsgsQDEAhCgAaQJQiKaCAUCGSaQmQwzk8iBKJ5cbMfddnfb3W27DvVUuzxt++3uOm+dqjqX30/6c4nd
        bbvdbj8+deqtFz6+PWskSZLULiNKkiSpIiNKkiSpIiNKkiSpIiNKkiSpIiNKkiSpIiNKkiSpIiNKkiSp
        ouoRde3GrPnH/22aV9+fNf/9wbd7/5Py95ckSRpTa12J+t6XmmI/+E9N89OvNs3n3pg1/3Ctaa7dLL+9
        JEnSUFtrRP3UfCiVRlSpX3xt1vzl203x/UiSJA2ttUbUVz+cNS+/1yz6+2tN87tvzppffX3W/Pgr5SGV
        cpXq977q6pQkSRp21SPq5Nd/c9HRH/1Jc/jnf71o79/faj55890n3yfjKsOqNKoyplyZkiRJQ616RD34
        pV9pmhdfvLB8ewbW/itfam5cP1hctfrj/2maH/nnp8dU7p1yVUqSJA2t6hGVgVQaTxd1/Lnfbu6+9Mri
        bfPQ3/n7qXJV6rX3yz+OJElSH6seUftffL04lq5q9umfXDz0l6tTGVPLK1OGlCRJGlJr3Vh++Gd/tShX
        mU5+7Teahz/388XhVCpj6uBvX1o8lPfZN86OSzCkJEnSUFprRF1Ubi6/+4UvLh7yy7gqjahluXcq3z9X
        pX5gPqIypNwjJUmS+t6VI+rarYfN371/Z6Ve/uCw+D7S3n98bTGqSjek56pUHh7MVagMqZwpVXofXfX2
        zQfFn/9FfVh4H5IkadpdOaL+9aN7zQv/8qVWfcerbzTf/+VvND/7tfeaz77z0XPjKleeMqhmP/Hpp8ZU
        rl4th1SuTJ1/m9oygn75m99qXvzKteZ7Xn+r+PO9qm998qj4viVJ0nRb6UpUaVi0LcPqh//r7eYP3r21
        uBK0fP8ZTufvpcr/n/OlfvTluhH1nx8fL4ZbRlzp59G2754Pr9KPI0mSpt1K90RlSJQGRm0ZVLky9Pnr
        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
</value>
  </data>
</root>